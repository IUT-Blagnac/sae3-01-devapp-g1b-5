--script test stock recipient---------------------------------------------------

--INSERT

-- Affichage avant événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Evénement déclencheur
INSERT INTO contientrecipient
VALUES (3, 5, 4);
-- Affichage après événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Annulation de la séquence d’instructions
ROLLBACK;

--UPDATE

-- Affichage avant événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Evénement déclencheur
UPDATE contientrecipient
SET quantiteunitaire = 1
WHERE IDCOMMANDE = 7
AND IDR = 5;
-- Affichage après événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Annulation de la séquence d’instructions
ROLLBACK;

--DELETE

-- Affichage avant événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Evénement déclencheur
DELETE FROM CONTIENTRECIPIENT
WHERE IDCOMMANDE = 15;
-- Affichage après événement
SELECT IDR, NOMR, STOCK
FROM RECIPIENT;
-- Annulation de la séquence d’instructions
ROLLBACK;


--trigger stock_recip--
CREATE OR REPLACE TRIGGER maj_stock_recipient
AFTER INSERT OR DELETE OR UPDATE OF quantiteunitaire, IDR
ON CONTIENTRECIPIENT
FOR EACH ROW
DECLARE
    idRecipient RECIPIENT.IDR%TYPE;
BEGIN
IF (INSERTING OR UPDATING) THEN
    SELECT IDR INTO idRecipient
    FROM RECIPIENT
    WHERE IDR = :NEW.IDR;
    UPDATE RECIPIENT
    SET stock = stock - :NEW.quantiteunitaire
    WHERE IDR = idRecipient; 
END IF;
IF (DELETING OR UPDATING) THEN
    SELECT idr INTO idRecipient
    FROM RECIPIENT
    WHERE idr = :OLD.idr;
    UPDATE RECIPIENT
    SET stock = stock + :OLD.quantiteunitaire
    WHERE idr = idRecipient; 
END IF;
END;
/



--script test stock bonbon-----------------------------------------------------------------------

--INSERT

-- Affichage avant événement
SELECT *
FROM CATEGORIEB;
-- Evénement déclencheur
INSERT INTO contientBonbon
VALUES (15, 8, 9.25);
-- Affichage après événement
SELECT *
FROM CATEGORIEB;
-- Annulation de la séquence d’instructions
ROLLBACK;

--UPDATE

-- Affichage avant événement
SELECT *
FROM CATEGORIEB;
-- Evénement déclencheur
UPDATE contientbonbon
SET quantitekg = 5.96
WHERE IDCOMMANDE = 15
AND IDB = 36;
-- Affichage après événement
SELECT *
FROM CATEGORIEB;
-- Annulation de la séquence d’instructions
ROLLBACK;


--DELETE

-- Affichage avant événement
SELECT *
FROM CATEGORIEB;
-- Evénement déclencheur
DELETE FROM CONTIENTBONBON
WHERE IDCOMMANDE = 25;
-- Affichage après événement
SELECT *
FROM CATEGORIEB;
-- Annulation de la séquence d’instructions
ROLLBACK;


--trigger stock_bonbon--
CREATE OR REPLACE TRIGGER maj_stock_bonbons
AFTER INSERT OR DELETE OR UPDATE OF quantitekg, idb
ON CONTIENTBONBON
FOR EACH ROW
DECLARE
    catBonbon BONBONS.idcategorie%TYPE;
BEGIN
IF (INSERTING OR UPDATING) THEN
    SELECT B.idcategorie INTO catBonbon
    FROM BONBONS B, CATEGORIEB C
    WHERE  B.idcategorie = C.idcategorie
    AND B.idb = :NEW.idb;
    UPDATE CATEGORIEB
    SET stockb = stockb - :NEW.quantitekg
    WHERE idcategorie = catBonbon; 
END IF;
IF (DELETING OR UPDATING) THEN
    SELECT B.idcategorie INTO catBonbon
    FROM BONBONS B, CATEGORIEB C
    WHERE B.idcategorie = C.idcategorie
    AND B.idb = :OLD.idb;
    UPDATE CATEGORIEB
    SET stockb = stockb + :OLD.quantitekg
    WHERE idcategorie = catBonbon; 
END IF;
END;

--script test respect quantite bonbon---------------------------------------------------------

--INSERT

SELECT *
FROM CATEGORIEB;

INSERT INTO CONTIENTBONBON
VALUES(15,35,6);

SELECT *
FROM CATEGORIEB;

ROLLBACK;


--trigger_qteStock_bonbon--
create or replace TRIGGER verif_qte_bonbons_commande
BEFORE INSERT OR UPDATE OF quantitekg, idb
ON CONTIENTBONBON
FOR EACH ROW
DECLARE
    qteBonbon CATEGORIEB.STOCKB%TYPE;
BEGIN
    IF (INSERTING OR UPDATING) THEN
        SELECT C.STOCKB INTO qteBonbon
        FROM CATEGORIEB C, BONBONS B
        WHERE B.idcategorie = C.idcategorie
        AND B.idb = :NEW.idb;
        IF (:NEW.quantitekg > qteBonbon) THEN
            RAISE_APPLICATION_ERROR(-20001, 'Erreur: Votre quantitée choisie dépasse les stocks !');
        END IF;
    END IF;
END;
/

--script test respect quantite recipient--------------------------------------------------------------

--INSERT

SELECT IDR, NOMR, STOCK
FROM RECIPIENT;

INSERT INTO CONTIENTRECIPIENT
VALUES(30,5,6);

SELECT IDR, NOMR, STOCK
FROM RECIPIENT;

ROLLBACK;

--trigger_qteStock_Recipient--
CREATE OR REPLACE TRIGGER verif_qte_recipient_commande
BEFORE INSERT OR UPDATE OF quantiteunitaire, idr
ON CONTIENTRECIPIENT
FOR EACH ROW
DECLARE
    qteRecipient RECIPIENT.STOCK%TYPE;
BEGIN
    IF (INSERTING OR UPDATING) THEN
        SELECT STOCK INTO qteRecipient
        FROM RECIPIENT
        WHERE IDR = :NEW.IDR;
        IF (:NEW.quantiteunitaire > qteRecipient) THEN
            RAISE_APPLICATION_ERROR(-20000, 'Erreur: Votre quantitée choisie dépasse les stocks !');
        END IF;
    END IF;
END;
/

--script test nb de bonbon dans un panier---------------------------------------------------------------

--INSERT

-- Affichage avant événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Evénement déclencheur
INSERT INTO contientbonbon
VALUES (25, 5, 7);
-- Affichage après événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Annulation de la séquence d’instructions
ROLLBACK;

--DELETE

-- Affichage avant événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Evénement déclencheur
DELETE FROM CONTIENTBONBON
WHERE IDPANIER = 25;
-- Affichage après événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Annulation de la séquence d’instructions
ROLLBACK;

--trigger nbBonbon dans un panier--

create or replace TRIGGER maj_NBarticle_bonbon
AFTER INSERT OR UPDATE OR DELETE
ON CONTIENTBONBON
FOR EACH ROW
BEGIN
    IF (INSERTING OR UPDATING) THEN
        UPDATE PANIER
        SET NBPRODUIT = NBPRODUIT + 1
        WHERE IDPANIER = :NEW.IDPANIER; 
    END IF;
    
    IF (DELETING OR UPDATING) THEN
        UPDATE PANIER
        SET NBPRODUIT = NBPRODUIT - 1
        WHERE IDPANIER = :OLD.IDPANIER; 
    END IF;
END;


--script test nb de recipient dans un panier------------------------------------------------------------------

--INSERT

-- Affichage avant événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Evénement déclencheur
INSERT INTO contientrecipient
VALUES (1,25, 7);
-- Affichage après événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Annulation de la séquence d’instructions
ROLLBACK;

--DELETE

-- Affichage avant événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Evénement déclencheur
DELETE FROM CONTIENTRECIPIENT
WHERE IDPANIER = 25;
-- Affichage après événement
SELECT *
FROM PANIER
WHERE IDPANIER = 25;
-- Annulation de la séquence d’instructions
ROLLBACK;

--trigger nbRecipient dans un panier--

create or replace TRIGGER maj_NBarticle_recipient
AFTER INSERT OR UPDATE OR DELETE
ON CONTIENTRECIPIENT
FOR EACH ROW
BEGIN
    IF (INSERTING OR UPDATING) THEN
        UPDATE PANIER
        SET NBPRODUIT = NBPRODUIT + 1
        WHERE IDPANIER = :NEW.IDPANIER; 
    END IF;
    
    IF (DELETING OR UPDATING) THEN
        UPDATE PANIER
        SET NBPRODUIT = NBPRODUIT - 1
        WHERE IDPANIER = :OLD.IDPANIER; 
    END IF;
END;


